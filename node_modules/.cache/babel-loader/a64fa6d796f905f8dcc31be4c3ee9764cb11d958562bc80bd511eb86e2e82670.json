{"ast":null,"code":"import _classCallCheck from\"/Users/veronikagennadevna/Desktop/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/veronikagennadevna/Desktop/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._baseUrl=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"_getResponse\",value:function _getResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}//массив карточек с сервера\n},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(this._getResponse);}//информация пользователя (о себе)\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(this._getResponse);}//установить данные о себе\n},{key:\"setUserInfo\",value:function setUserInfo(userData){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:userData.name,about:userData.about})}).then(this._getResponse);}//создать карточку\n},{key:\"createCard\",value:function createCard(newCard){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:\"\".concat(newCard.name),link:\"\".concat(newCard.link)})}).then(this._getResponse);}//удалить карточку\n},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id),{method:'DELETE',headers:this._headers});}//установить аватар\n},{key:\"setUserAvatar\",value:function setUserAvatar(img){return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:\"\".concat(img.avatar)})}).then(this._getResponse);}//лайки\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLiked){if(!isLiked){isLiked=true;}else{isLiked=false;}return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes\"),{method:isLiked?'PUT':'DELETE',headers:this._headers}).then(this._getResponse);}}]);return Api;}();export var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-59',headers:{authorization:'ff56f93d-d478-42ff-a22e-0db12fad9894','Content-Type':'application/json'}});","map":{"version":3,"names":["Api","options","_classCallCheck","_baseUrl","baseUrl","_headers","headers","_createClass","key","value","_getResponse","res","ok","json","Promise","reject","concat","status","getInitialCards","fetch","then","getUserInfo","setUserInfo","userData","method","body","JSON","stringify","name","about","createCard","newCard","link","deleteCard","id","setUserAvatar","img","avatar","changeLikeCardStatus","isLiked","api","authorization"],"sources":["/Users/veronikagennadevna/Desktop/dev/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n  //массив карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._getResponse);\n  }\n\n  //информация пользователя (о себе)\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then(this._getResponse);\n  }\n  //установить данные о себе\n  setUserInfo(userData) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.about,\n      }),\n    }).then(this._getResponse);\n  }\n  //создать карточку\n  createCard(newCard) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: `${newCard.name}`,\n        link: `${newCard.link}`,\n      }),\n    }).then(this._getResponse);\n  }\n  //удалить карточку\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    });\n  }\n  //установить аватар\n  setUserAvatar(img) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${img.avatar}`,\n      }),\n    }).then(this._getResponse);\n  }\n\n  //лайки\n  changeLikeCardStatus(id, isLiked) {\n    if (!isLiked) {\n      isLiked = true;\n    } else {\n      isLiked = false;\n    }\n\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: this._headers,\n    }).then(this._getResponse);\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-59',\n  headers: {\n    authorization: 'ff56f93d-d478-42ff-a22e-0db12fad9894',\n    'Content-Type': 'application/json',\n  },\n});\n"],"mappings":"yRAAM,CAAAA,GAAG,yBACP,SAAAA,IAAYC,OAAO,CAAE,CAAAC,eAAA,MAAAF,GAAA,EACnB,IAAI,CAACG,QAAQ,CAAGF,OAAO,CAACG,OAAO,CAC/B,IAAI,CAACC,QAAQ,CAAGJ,OAAO,CAACK,OAAO,CACjC,CAACC,YAAA,CAAAP,GAAA,GAAAQ,GAAA,gBAAAC,KAAA,CAED,SAAAC,aAAaC,GAAG,CAAE,CAChB,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,EAAE,CACnB,CAAC,IAAM,CACL,MAAO,CAAAC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,EAAG,CAChD,CACF,CACA;AAAA,GAAAT,GAAA,mBAAAC,KAAA,CACA,SAAAS,gBAAA,CAAkB,CAChB,MAAO,CAAAC,KAAK,IAAAH,MAAA,CAAI,IAAI,CAACb,QAAQ,WAAU,CACrCG,OAAO,CAAE,IAAI,CAACD,QAChB,CAAC,CAAC,CAACe,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC,CAC5B,CAEA;AAAA,GAAAF,GAAA,eAAAC,KAAA,CACA,SAAAY,YAAA,CAAc,CACZ,MAAO,CAAAF,KAAK,IAAAH,MAAA,CAAI,IAAI,CAACb,QAAQ,cAAa,CACxCG,OAAO,CAAE,IAAI,CAACD,QAChB,CAAC,CAAC,CAACe,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC,CAC5B,CACA;AAAA,GAAAF,GAAA,eAAAC,KAAA,CACA,SAAAa,YAAYC,QAAQ,CAAE,CACpB,MAAO,CAAAJ,KAAK,IAAAH,MAAA,CAAI,IAAI,CAACb,QAAQ,cAAa,CACxCqB,MAAM,CAAE,OAAO,CACflB,OAAO,CAAE,IAAI,CAACD,QAAQ,CACtBoB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,IAAI,CAAEL,QAAQ,CAACK,IAAI,CACnBC,KAAK,CAAEN,QAAQ,CAACM,KAClB,CAAC,CACH,CAAC,CAAC,CAACT,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC,CAC5B,CACA;AAAA,GAAAF,GAAA,cAAAC,KAAA,CACA,SAAAqB,WAAWC,OAAO,CAAE,CAClB,MAAO,CAAAZ,KAAK,IAAAH,MAAA,CAAI,IAAI,CAACb,QAAQ,WAAU,CACrCqB,MAAM,CAAE,MAAM,CACdlB,OAAO,CAAE,IAAI,CAACD,QAAQ,CACtBoB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,IAAI,IAAAZ,MAAA,CAAKe,OAAO,CAACH,IAAI,CAAE,CACvBI,IAAI,IAAAhB,MAAA,CAAKe,OAAO,CAACC,IAAI,CACvB,CAAC,CACH,CAAC,CAAC,CAACZ,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC,CAC5B,CACA;AAAA,GAAAF,GAAA,cAAAC,KAAA,CACA,SAAAwB,WAAWC,EAAE,CAAE,CACb,MAAO,CAAAf,KAAK,IAAAH,MAAA,CAAI,IAAI,CAACb,QAAQ,YAAAa,MAAA,CAAUkB,EAAE,EAAI,CAC3CV,MAAM,CAAE,QAAQ,CAChBlB,OAAO,CAAE,IAAI,CAACD,QAChB,CAAC,CAAC,CACJ,CACA;AAAA,GAAAG,GAAA,iBAAAC,KAAA,CACA,SAAA0B,cAAcC,GAAG,CAAE,CACjB,MAAO,CAAAjB,KAAK,IAAAH,MAAA,CAAI,IAAI,CAACb,QAAQ,qBAAoB,CAC/CqB,MAAM,CAAE,OAAO,CACflB,OAAO,CAAE,IAAI,CAACD,QAAQ,CACtBoB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBU,MAAM,IAAArB,MAAA,CAAKoB,GAAG,CAACC,MAAM,CACvB,CAAC,CACH,CAAC,CAAC,CAACjB,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC,CAC5B,CAEA;AAAA,GAAAF,GAAA,wBAAAC,KAAA,CACA,SAAA6B,qBAAqBJ,EAAE,CAAEK,OAAO,CAAE,CAChC,GAAI,CAACA,OAAO,CAAE,CACZA,OAAO,CAAG,IAAI,CAChB,CAAC,IAAM,CACLA,OAAO,CAAG,KAAK,CACjB,CAEA,MAAO,CAAApB,KAAK,IAAAH,MAAA,CAAI,IAAI,CAACb,QAAQ,YAAAa,MAAA,CAAUkB,EAAE,WAAU,CACjDV,MAAM,CAAEe,OAAO,CAAG,KAAK,CAAG,QAAQ,CAClCjC,OAAO,CAAE,IAAI,CAACD,QAChB,CAAC,CAAC,CAACe,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC,CAC5B,CAAC,WAAAV,GAAA,KAGH,MAAO,IAAM,CAAAwC,GAAG,CAAG,GAAI,CAAAxC,GAAG,CAAC,CACzBI,OAAO,CAAE,6CAA6C,CACtDE,OAAO,CAAE,CACPmC,aAAa,CAAE,sCAAsC,CACrD,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}