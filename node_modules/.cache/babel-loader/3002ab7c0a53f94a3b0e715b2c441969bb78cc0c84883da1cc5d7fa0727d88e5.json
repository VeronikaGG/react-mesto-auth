{"ast":null,"code":"const BASE_URL = \"https://auth.nomoreparties.co\";\nfunction getResponse(res) {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\n}\nfunction request(url, options) {\n  return fetch(url, options).then(res => getResponse(res));\n}\nexport const register = (password, email) => {\n  return request(BASE_URL + \"/signup\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  });\n};\nexport const login = (password, email) => {\n  return request(BASE_URL + \"/signin\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  });\n};\nexport const checkToken = token => {\n  return request(BASE_URL + \"/users/me\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["BASE_URL","getResponse","res","ok","json","Promise","reject","status","statusText","request","url","options","fetch","then","register","password","email","method","headers","Accept","body","JSON","stringify","login","checkToken","token","Authorization"],"sources":["/Users/veronikagennadevna/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["const BASE_URL = \"https://auth.nomoreparties.co\";\n\nfunction getResponse(res) {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\n}\n\nfunction request(url, options) {\n  return fetch(url, options).then((res) => getResponse(res));\n}\n\nexport const register = (password, email) => {\n  return request(BASE_URL + \"/signup\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ password: password, email: email }),\n  });\n};\n\nexport const login = (password, email) => {\n  return request(BASE_URL + \"/signin\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ password: password, email: email }),\n  });\n};\n\nexport const checkToken = (token) => {\n  return request(BASE_URL + \"/users/me\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,+BAA+B;AAEhD,SAASC,WAAWA,CAACC,GAAG,EAAE;EACxB,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,EAAE,GAAGC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,IAAGL,GAAG,CAACM,UAAW,EAAC,CAAC;AACxF;AAEA,SAASC,OAAOA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC7B,OAAOC,KAAK,CAACF,GAAG,EAAEC,OAAO,CAAC,CAACE,IAAI,CAAEX,GAAG,IAAKD,WAAW,CAACC,GAAG,CAAC,CAAC;AAC5D;AAEA,OAAO,MAAMY,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOP,OAAO,CAACT,QAAQ,GAAG,SAAS,EAAE;IACnCiB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ,EAAEA,QAAQ;MAAEC,KAAK,EAAEA;IAAM,CAAC;EAC3D,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMO,KAAK,GAAGA,CAACR,QAAQ,EAAEC,KAAK,KAAK;EACxC,OAAOP,OAAO,CAACT,QAAQ,GAAG,SAAS,EAAE;IACnCiB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ,EAAEA,QAAQ;MAAEC,KAAK,EAAEA;IAAM,CAAC;EAC3D,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOhB,OAAO,CAACT,QAAQ,GAAG,WAAW,EAAE;IACrCkB,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}